# Generated by Django 5.2.4 on 2025-10-27 04:47

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('icon', models.URLField(blank=True, null=True)),
                ('xp_required', models.PositiveIntegerField(help_text='The minimum total XP required to be eligible for this badge.')),
            ],
            options={
                'verbose_name': 'Badge',
                'verbose_name_plural': 'Badges',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField()),
                ('cost_xp', models.PositiveIntegerField(default=100, help_text='The amount of XP required to purchase this reward.')),
                ('reward_type', models.CharField(choices=[('item', 'In-Game Item'), ('privilege', 'Real-Life Privilege'), ('cosmetic', 'Cosmetic/Skin')], default='item', max_length=20)),
            ],
            options={
                'verbose_name': 'Reward',
                'verbose_name_plural': 'Rewards',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserReward',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_used', models.BooleanField(default=False)),
                ('reward', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamification.reward')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchased_rewards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Reward',
                'verbose_name_plural': 'User Rewards',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserBadge',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamification.badge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='awarded_badges', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Badge',
                'verbose_name_plural': 'User Badges',
                'abstract': False,
                'unique_together': {('user', 'badge')},
            },
        ),
    ]
